---
permalink: dexie.html
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">	
		<title>Dexie testing</title>
		<script src="/dexie.min.js"></script> <!-- local version of Dexie IndexedDB wrapper -->
		<script>













    var db = new Dexie("garciaudit_db");

    db.version(1).stores({
	  audits: 'id,name,checklist_ID,*page_IDs,*issue_IDs',
	  issues: 'id,rule_ID,status,page_state_ID,page_ID',
	  pages: 'id,name,*page_state_IDs',
	  page_states: 'id,name,page_ID',
	  checklists: 'id,&name,*rule_IDs',
	  rules: 'id,rule_name,*accessibility_requirements'
    });

    // Now add some values.
	db.audits.bulkPut([
      { id: 30, name: "Example COM and ORG", checklist_ID: 301, page_IDs: [400,401],issue_IDs: [201,202,203,204,205,206,207] },
	  { id: 31, name: "Only example.com", checklist_ID: 301, page_IDs: [402]}
    ]).then(() => {

      return db.audits.toArray();

    }).then(audit_array => {

		for (let i = 0; i < audit_array.length; i++) {
			appendToAuditList(audit_array[i].id,audit_array[i].name);
		}

    }).catch(err => {

      alert("CRUNK... " + err);

    });

	db.issues.bulkPut([
      { id: 200, rule_ID: "log-1000", status: "Pass", page_state_ID: 100, page_ID: 1},
      { id: 201, rule_ID: "log-1001", status: "Pass", page_state_ID: 100, page_ID: 1},
      { id: 202, rule_ID: "log-1000", status: "Pass", page_state_ID: 101, page_ID: 1},
      { id: 203, rule_ID: "log-1001", status: "Fail", page_state_ID: 101, page_ID: 1, description: "Some bullshit"},
      { id: 204, rule_ID: "log-1000", status: "Fail", page_state_ID: 102, page_ID: 2, description: "Title doesn't exist for the page"},
      { id: 205, rule_ID: "log-1001", status: "Fail", page_state_ID: 102, page_ID: 2, description: "It's not even descriptive"},
      { id: 206, rule_ID: "log-1000", status: "Pass", page_state_ID: 103, page_ID: 2},
      { id: 207, rule_ID: "log-1001", status: "Fail", page_state_ID: 103, page_ID: 2, description: "Need even more fails."}
    ]).catch(err => {

      alert("CRUNK... " + err);

    });

	db.rules.bulkPut([
      { id: "log-1000", rule_name: "Title is not empty", description: "The title element has innerHTML", accessibility_requirements: ["WCAG 2.0","WCAG 2.1", "WCAG 2.2"] },
      { id: "log-1001", rule_name: "Title is descriptive", description: "The title element innerHTML describes the page content", accessibility_requirements: ["WCAG 2.0","WCAG 2.1", "WCAG 2.2"] }
    ]).catch(err => {

      alert("CRUNK... " + err);

    });


	db.pages.bulkPut([
    	{ id: 400, name: "Homepage COM", url: "example.com", page_state_IDs: [100, 101] },
    	{ id: 401, name: "Homepage ORG", url: "example.org", page_state_IDs: [102, 103] },
    	{ id: 402, name: "Example COM Homepage", url: "example.com", page_state_IDs: [104] }
    ]).catch(err => {

      alert("CRUNK... " + err);

    });

	db.page_states.bulkPut([
      { id: 100, name: "Initial", page_ID: 400},
      { id: 101, name: "Fake Page", page_ID: 400, instructions: "Click the giant 'Fake' button"},
      { id: 102, name: "Initial", page_ID: 401},
      { id: 103, name: "Made up page", page_ID: 401, instructions: "Submit some form"},
      { id: 104, name: "Initial", page_ID: 402}	  
    ]).catch(err => {

      alert("CRUNK... " + err);

    });

	db.checklists.bulkPut([
      { id: 300, rule_IDs: ["log-1000"], name: "One rule ruleset" },
      { id: 301, rule_IDs: ["log-1000", "log-1001"], name: "Two rule ruleset" }
    ]).catch(err => {

      alert("CRUNK... " + err);

    });








		</script>
	</head>
	<body>
			<main>
				<h1>dexie testing</h1>
				<ul id="empty-list"></ul>
			</main>
	</body>
	<script>

		//these would go in a defer script
		function appendToAuditList(txtAuditID,txtAuditName){
			let new_li = document.createElement("li");
			let new_url = document.createElement("a");
			let url_text = "audit.html?audit_ID=" + txtAuditID;
			
			new_url.setAttribute("href",url_text);
			new_url.innerHTML = txtAuditName;

			new_li.appendChild(new_url);
			document.getElementById("empty-list").appendChild(new_li);
		}

	</script>
</html>